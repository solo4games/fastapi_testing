volumes:
  shared_images:

  shared_data:


networks:
  shared_network:
    name: 'project_shared_network'

services:

  app:
    container_name: my_project_app
    build:
      context: .
    env_file:
      - .env-docker
    depends_on:
      db:
        condition: service_healthy
    command: ["/FastApiProject/for_docker/app.sh"]
    volumes:
      - shared_images:/FastApiProject/app/static/images
    ports:
      - "9000:8000"
    networks:
      - shared_network


  db:
    image: postgres:16
    container_name: my_project_postgres
    env_file:
      - ./.env-docker
    volumes:
      - shared_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - shared_network

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: my_project_rabbit
    healthcheck:
      test: [ "CMD-SHELL", "rabbitmq-diagnostics -q ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - shared_network


  celery:
    build:
      context: .
    container_name: my_project_celery
    env_file:
      - .env-docker
    command: ["/FastApiProject/for_docker/celery.sh"]
    volumes:
      - shared_images:/FastApiProject/app/static/images
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_healthy
    networks:
      - shared_network